var documenterSearchIndex = {"docs":
[{"location":"create/#Creating-and-Solving-Linear-Programs","page":"Creating and Solving LPs","title":"Creating and Solving Linear Programs","text":"","category":"section"},{"location":"create/#Create-the-Tableau","page":"Creating and Solving LPs","title":"Create the Tableau","text":"","category":"section"},{"location":"create/#Canonical-LPs","page":"Creating and Solving LPs","title":"Canonical LPs","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"A canonical LP has the form min c^T x s.t. Ax  b x ge 0. To set up a tableau for this problem simply create the matrix A and the vectors b and c, and call Tableau(A,b,c). ","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"For example, let A, b, and c be as follows:","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> A = [3 10; 5 6; 10 2];\n\njulia> b = [100, 100, 100];\n\njulia> c = [25, 10];\n\njulia> Tableau(A, b, c)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │ -25 │ -10 │   0 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   3 │  10 │  -1 │   0 │   0 │ 100 │\n│   Cons 2 │ 0 │   5 │   6 │   0 │  -1 │   0 │ 100 │\n│   Cons 3 │ 0 │  10 │   2 │   0 │   0 │  -1 │ 100 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Notice that extra variables x_3, x_4, and x_5 are added to the Tableau  as slack variables to convert inequalities into equations. That is, canonical  form LPs are automatically converted into standard form. ","category":"page"},{"location":"create/#Standard-LPs","page":"Creating and Solving LPs","title":"Standard LPs","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"A linear program in standard form is min c^T x s.t. Ax = b, x  0.  For example,","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> A = [2 1 0 9 -1; 1 1 -1 5 1]\n2×5 Matrix{Int64}:\n 2  1   0  9  -1\n 1  1  -1  5   1\n\njulia> b = [9, 7]\n2-element Vector{Int64}:\n 9\n 7\n\njulia> c = [2, 4, 2, 1, -1]\n5-element Vector{Int64}:\n  2\n  4\n  2\n  1\n -1\n\njulia> T = Tableau(A, b, c, false)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │  -2 │  -4 │  -2 │  -1 │   1 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   2 │   1 │   0 │   9 │  -1 │   9 │\n│   Cons 2 │ 0 │   1 │   1 │  -1 │   5 │   1 │   7 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"The fourth argument false means that the constraints are already equalities and slack variables should not be appended. ","category":"page"},{"location":"create/#Specify-a-Basis","page":"Creating and Solving LPs","title":"Specify a Basis","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Use set_basis!(T, B) to specify a staring basis for the tableau. Here, B is a list (Vector) of integers specifying the columns that are in the basis. ","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> set_basis!(T,[1,4,5])\n┌──────────┬───┬─────┬───────┬───────┬─────┬─────┬────────┐\n│          │ z │ x_1 │   x_2 │   x_3 │ x_4 │ x_5 │    RHS │\n│ Obj Func │ 1 │   0 │ 220/3 │ -25/3 │   0 │   0 │ 2500/3 │\n├──────────┼───┼─────┼───────┼───────┼─────┼─────┼────────┤\n│   Cons 1 │ 0 │   1 │  10/3 │  -1/3 │   0 │   0 │  100/3 │\n│   Cons 2 │ 0 │   0 │  32/3 │  -5/3 │   1 │   0 │  200/3 │\n│   Cons 3 │ 0 │   0 │  94/3 │ -10/3 │   0 │   1 │  700/3 │\n└──────────┴───┴─────┴───────┴───────┴─────┴─────┴────────┘","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Note: On the screen, the headings for the basis (in this case, x_1, x_3, and x_4) appear in green. ","category":"page"},{"location":"create/#Tools-to-find-a-basis","page":"Creating and Solving LPs","title":"Tools to find a basis","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"The function find_all_bases(T) returns a list of all feasible bases for T:","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> find_all_bases(T)\n4-element Vector{Vector{Int64}}:\n [1, 2, 3]\n [1, 2, 5]\n [1, 4, 5]\n [2, 3, 4]","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"The function find_a_basis(T) returns a feasible basis for T (the first it finds).","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> find_a_basis(T)\n3-element Vector{Int64}:\n 1\n 2\n 3","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"These are inefficient functions. We plan to change the implementation of find_a_basis to something more performant. ","category":"page"},{"location":"create/#Perform-the-Simplex-Algorithm","page":"Creating and Solving LPs","title":"Perform the Simplex Algorithm","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Once a tableau has been set up with a feasible basis, use simplex_solve!(T) to run the simplex algorithm and return solution to the LP.","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> simplex_solve!(T)\nStarting tableau\n\n┌──────────┬───┬─────┬───────┬───────┬─────┬─────┬────────┐\n│          │ z │ x_1 │   x_2 │   x_3 │ x_4 │ x_5 │    RHS │\n│ Obj Func │ 1 │   0 │ 220/3 │ -25/3 │   0 │   0 │ 2500/3 │\n├──────────┼───┼─────┼───────┼───────┼─────┼─────┼────────┤\n│   Cons 1 │ 0 │   1 │  10/3 │  -1/3 │   0 │   0 │  100/3 │\n│   Cons 2 │ 0 │   0 │  32/3 │  -5/3 │   1 │   0 │  200/3 │\n│   Cons 3 │ 0 │   0 │  94/3 │ -10/3 │   0 │   1 │  700/3 │\n└──────────┴───┴─────┴───────┴───────┴─────┴─────┴────────┘\n\nColumn 4 leaves basis and column 2 enters\n\n┌──────────┬───┬─────┬─────┬───────┬────────┬─────┬──────┐\n│          │ z │ x_1 │ x_2 │   x_3 │    x_4 │ x_5 │  RHS │\n│ Obj Func │ 1 │   0 │   0 │  25/8 │  -55/8 │   0 │  375 │\n├──────────┼───┼─────┼─────┼───────┼────────┼─────┼──────┤\n│   Cons 1 │ 0 │   1 │   0 │  3/16 │  -5/16 │   0 │ 25/2 │\n│   Cons 2 │ 0 │   0 │   1 │ -5/32 │   3/32 │   0 │ 25/4 │\n│   Cons 3 │ 0 │   0 │   0 │ 25/16 │ -47/16 │   1 │ 75/2 │\n└──────────┴───┴─────┴─────┴───────┴────────┴─────┴──────┘\n\nColumn 5 leaves basis and column 3 enters\n\n┌──────────┬───┬─────┬─────┬─────┬────────┬───────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │    x_4 │   x_5 │ RHS │\n│ Obj Func │ 1 │   0 │   0 │   0 │     -1 │    -2 │ 300 │\n├──────────┼───┼─────┼─────┼─────┼────────┼───────┼─────┤\n│   Cons 1 │ 0 │   1 │   0 │   0 │   1/25 │ -3/25 │   8 │\n│   Cons 2 │ 0 │   0 │   1 │   0 │   -1/5 │  1/10 │  10 │\n│   Cons 3 │ 0 │   0 │   0 │   1 │ -47/25 │ 16/25 │  24 │\n└──────────┴───┴─────┴─────┴─────┴────────┴───────┴─────┘\n\nOptimality reached\nValue = 300\n5-element Vector{Rational}:\n  8\n 10\n 24\n  0\n  0","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Note: This is early days for this module. Anything before 0.1.0 is subject to massive changes. ","category":"page"},{"location":"#SimplexTableaux","page":"Overview","title":"SimplexTableaux","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This module can be used to show how to solve linear programming problems using  the simplex method by pivoting tableaux. ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This is an illusration project for solving feasible optimization problems of the form  min c^T x subject to Ax  b and x ge 0 (canonical form) and of the form min c^T x subject to Ax = b and x ge 0 (standard form).","category":"page"},{"location":"#Caveats","page":"Overview","title":"Caveats","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"As a demonstration project, this is not suitable for solving actual linear programming (LP) problems.  At present it will fail if:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"The LP is infeasible.\nThe LP is unbounded.\nOther unidentified reasons. (In other words, still buggy.)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This module is set up for minimization problems only. ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This module solves [not yet!!] LPs using the simplex algorithm which is not the most performant method.  Further, all data is stored using arbitrary precision integers (that is, Rational{BigInt}) which gives  exact results, but is much slower than floating point arithmetic. These issues are negligible for small problems. ","category":"page"},{"location":"#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"There are three principle steps to solving a linear program with this module:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Create the tableau: Tableau(A,b,c)\nSpecify a feasible basis: set_basis!(T, B)\nRun the simplex algorithm: simplex_solve!(T)","category":"page"}]
}
