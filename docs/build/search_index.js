var documenterSearchIndex = {"docs":
[{"location":"solve/#Solving-Linear-Programs","page":"Solving LPs","title":"Solving Linear Programs","text":"","category":"section"},{"location":"solve/#Manual-Solution","page":"Solving LPs","title":"Manual Solution","text":"","category":"section"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"Once a tableau has been created for a given linear program, the objective function can be minimized by the following steps:","category":"page"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"Set a starting basis using set_basis!(T, B). To have the computer suggest a starting basis, use find_a_basis(T). \nRepeatedly pivot the tableau until all the numbers under variable names are nonpositive. Use find_pivot to have the computer suggest a basis pivot. \nWhen pivoting is finished, use basic_vector(T) to get the values for the variables that minimizes the LP and use value(T) to get the minimum objective value. ","category":"page"},{"location":"solve/#Simplex-Method-Solution","page":"Solving LPs","title":"Simplex Method Solution","text":"","category":"section"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"Given a tableau, use simplex_solve! to have the computer do all the steps to produce an optimal solution to a linear program. ","category":"page"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ x_6 │ RHS │\n│ Obj Func │ 1 │   7 │   4 │   3 │   1 │   3 │  -8 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   6 │   5 │   8 │   0 │  -5 │   4 │   7 │\n│   Cons 2 │ 0 │   3 │  -1 │  -8 │  -7 │  -2 │  -4 │   2 │\n│   Cons 3 │ 0 │   1 │   7 │  -4 │  -5 │   0 │   5 │   4 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘\n\n\njulia> simplex_solve!(T)\nStarting basis found: [1, 2, 5]\nStarting tableau\n\n┌──────────┬───┬─────┬─────┬────────┬───────┬─────┬─────────┬───────┐\n│          │ z │ x_1 │ x_2 │    x_3 │   x_4 │ x_5 │     x_6 │   RHS │\n│ Obj Func │ 1 │   0 │   0 │  397/3 │ 274/3 │   0 │    65/3 │ -25/3 │\n├──────────┼───┼─────┼─────┼────────┼───────┼─────┼─────────┼───────┤\n│   Cons 1 │ 0 │   1 │   0 │ -113/9 │ -80/9 │   0 │ -121/36 │   8/9 │\n│   Cons 2 │ 0 │   0 │   1 │   11/9 │   5/9 │   0 │   43/36 │   4/9 │\n│   Cons 3 │ 0 │   0 │   0 │ -139/9 │ -91/9 │   1 │ -131/36 │   1/9 │\n└──────────┴───┴─────┴─────┴────────┴───────┴─────┴─────────┴───────┘\n\nPivot 1: column 2 leaves basis and column 3 enters\n\n┌──────────┬───┬─────┬──────────┬─────┬────────┬─────┬──────────┬─────────┐\n│          │ z │ x_1 │      x_2 │ x_3 │    x_4 │ x_5 │      x_6 │     RHS │\n│ Obj Func │ 1 │   0 │ -1191/11 │   0 │ 343/11 │   0 │ -4737/44 │ -621/11 │\n├──────────┼───┼─────┼──────────┼─────┼────────┼─────┼──────────┼─────────┤\n│   Cons 1 │ 0 │   1 │   113/11 │   0 │ -35/11 │   0 │    98/11 │   60/11 │\n│   Cons 2 │ 0 │   0 │     9/11 │   1 │   5/11 │   0 │    43/44 │    4/11 │\n│   Cons 3 │ 0 │   0 │   139/11 │   0 │ -34/11 │   1 │   126/11 │   63/11 │\n└──────────┴───┴─────┴──────────┴─────┴────────┴─────┴──────────┴─────────┘\n\nPivot 2: column 3 leaves basis and column 4 enters\n\n┌──────────┬───┬─────┬────────┬────────┬─────┬─────┬──────────┬────────┐\n│          │ z │ x_1 │    x_2 │    x_3 │ x_4 │ x_5 │      x_6 │    RHS │\n│ Obj Func │ 1 │   0 │ -822/5 │ -343/5 │   0 │   0 │ -1747/10 │ -407/5 │\n├──────────┼───┼─────┼────────┼────────┼─────┼─────┼──────────┼────────┤\n│   Cons 1 │ 0 │   1 │     16 │      7 │   0 │   0 │     63/4 │      8 │\n│   Cons 2 │ 0 │   0 │    9/5 │   11/5 │   1 │   0 │    43/20 │    4/5 │\n│   Cons 3 │ 0 │   0 │   91/5 │   34/5 │   0 │   1 │   181/10 │   41/5 │\n└──────────┴───┴─────┴────────┴────────┴─────┴─────┴──────────┴────────┘\n\nOptimality reached. Pivot count = 2\nMinimal value = -407/5 = -81.4\n6-element Vector{Rational}:\n   8\n   0\n   0\n  4//5\n 41//5\n   0","category":"page"},{"location":"solve/#Big-M-Solution","page":"Solving LPs","title":"Big-M Solution","text":"","category":"section"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"The function big_M_solution solves linear programs using the Simplex Method on an augmented tableau. The user may specify the value of M or use the default (100).","category":"page"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ RHS │\n│ Obj Func │ 1 │   1 │   8 │  -8 │  -8 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │  -8 │  -6 │   6 │   3 │  -8 │\n│   Cons 2 │ 0 │   6 │  -8 │   1 │  -3 │  -1 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┘\n\n\njulia> big_M_solve(T)\nSolving this augmented tableau\n┌──────────┬───┬─────┬─────┬─────┬─────┬──────┬──────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │  x_5 │  x_6 │ RHS │\n│ Obj Func │ 1 │   1 │   8 │  -8 │  -8 │ -100 │ -100 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼──────┼──────┼─────┤\n│   Cons 1 │ 0 │   8 │   6 │  -6 │  -3 │    1 │    0 │   8 │\n│   Cons 2 │ 0 │  -6 │   8 │  -1 │   3 │    0 │    1 │   1 │\n└──────────┴───┴─────┴─────┴─────┴─────┴──────┴──────┴─────┘\n\nStarting tableau\n\n┌──────────┬───┬─────┬──────┬──────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │  x_2 │  x_3 │ x_4 │ x_5 │ x_6 │ RHS │\n│ Obj Func │ 1 │ 201 │ 1408 │ -708 │  -8 │   0 │   0 │ 900 │\n├──────────┼───┼─────┼──────┼──────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   8 │    6 │   -6 │  -3 │   1 │   0 │   8 │\n│   Cons 2 │ 0 │  -6 │    8 │   -1 │   3 │   0 │   1 │   1 │\n└──────────┴───┴─────┴──────┴──────┴─────┴─────┴─────┴─────┘\n\nPivot 1: column 6 leaves basis and column 2 enters\n\n┌──────────┬───┬──────┬─────┬───────┬───────┬─────┬──────┬──────┐\n│          │ z │  x_1 │ x_2 │   x_3 │   x_4 │ x_5 │  x_6 │  RHS │\n│ Obj Func │ 1 │ 1257 │   0 │  -532 │  -536 │   0 │ -176 │  724 │\n├──────────┼───┼──────┼─────┼───────┼───────┼─────┼──────┼──────┤\n│   Cons 1 │ 0 │ -3/4 │   1 │  -1/8 │   3/8 │   0 │  1/8 │  1/8 │\n│   Cons 2 │ 0 │ 25/2 │   0 │ -21/4 │ -21/4 │   1 │ -3/4 │ 29/4 │\n└──────────┴───┴──────┴─────┴───────┴───────┴─────┴──────┴──────┘\n\nPivot 2: column 5 leaves basis and column 1 enters\n\n┌──────────┬───┬─────┬─────┬─────────┬─────────┬──────────┬──────────┬─────────┐\n│          │ z │ x_1 │ x_2 │     x_3 │     x_4 │      x_5 │      x_6 │     RHS │\n│ Obj Func │ 1 │   0 │   0 │ -203/50 │ -403/50 │ -2514/25 │ -5029/50 │ -253/50 │\n├──────────┼───┼─────┼─────┼─────────┼─────────┼──────────┼──────────┼─────────┤\n│   Cons 1 │ 0 │   1 │   0 │  -21/50 │  -21/50 │     2/25 │    -3/50 │   29/50 │\n│   Cons 2 │ 0 │   0 │   1 │  -11/25 │    3/50 │     3/50 │     2/25 │   14/25 │\n└──────────┴───┴─────┴─────┴─────────┴─────────┴──────────┴──────────┴─────────┘\n\nOptimality reached. Pivot count = 2\nMinimal value = -253/50 = -5.06\n\nFinal tableau\n\n┌──────────┬───┬─────┬─────┬─────────┬─────────┬─────────┐\n│          │ z │ x_1 │ x_2 │     x_3 │     x_4 │     RHS │\n│ Obj Func │ 1 │   0 │   0 │ -203/50 │ -403/50 │ -253/50 │\n├──────────┼───┼─────┼─────┼─────────┼─────────┼─────────┤\n│   Cons 1 │ 0 │   1 │   0 │  -21/50 │  -21/50 │   29/50 │\n│   Cons 2 │ 0 │   0 │   1 │  -11/25 │    3/50 │   14/25 │\n└──────────┴───┴─────┴─────┴─────────┴─────────┴─────────┘\n\nMinimial value = -253//50 = -5.06\n4-element Vector{Rational}:\n 29//50\n 14//25\n   0\n   0","category":"page"},{"location":"solve/#Numerical-Solution","page":"Solving LPs","title":"Numerical Solution","text":"","category":"section"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"The function lp_solve uses a standard linear program solver to solve the tableau.  We use the HiGHS solver.","category":"page"},{"location":"solve/","page":"Solving LPs","title":"Solving LPs","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ RHS │\n│ Obj Func │ 1 │   1 │   8 │  -8 │  -8 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │  -8 │  -6 │   6 │   3 │  -8 │\n│   Cons 2 │ 0 │   6 │  -8 │   1 │  -3 │  -1 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┘\n\n\njulia> lp_solve(T)\nMinimal objective value = -5.06\n\n4-element Vector{Float64}:\n 0.5800000000000001\n 0.5599999999999999\n 0.0\n 0.0","category":"page"},{"location":"bases/#Bases","page":"Bases","title":"Bases","text":"","category":"section"},{"location":"bases/#Setting-a-Basis","page":"Bases","title":"Setting a Basis","text":"","category":"section"},{"location":"bases/","page":"Bases","title":"Bases","text":"Use set_basis!(T, B) to specify a starting basis for the tableau.  Here, B is a list (Vector) of integers specifying the columns that are in the basis. ","category":"page"},{"location":"bases/","page":"Bases","title":"Bases","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │ -25 │ -10 │   0 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   3 │  10 │  -1 │   0 │   0 │ 100 │\n│   Cons 2 │ 0 │   5 │   6 │   0 │  -1 │   0 │ 100 │\n│   Cons 3 │ 0 │  10 │   2 │   0 │   0 │  -1 │ 100 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘\n\njulia> set_basis!(T,[1,4,5])\n┌──────────┬───┬─────┬───────┬───────┬─────┬─────┬────────┐\n│          │ z │ x_1 │   x_2 │   x_3 │ x_4 │ x_5 │    RHS │\n│ Obj Func │ 1 │   0 │ 220/3 │ -25/3 │   0 │   0 │ 2500/3 │\n├──────────┼───┼─────┼───────┼───────┼─────┼─────┼────────┤\n│   Cons 1 │ 0 │   1 │  10/3 │  -1/3 │   0 │   0 │  100/3 │\n│   Cons 2 │ 0 │   0 │  32/3 │  -5/3 │   1 │   0 │  200/3 │\n│   Cons 3 │ 0 │   0 │  94/3 │ -10/3 │   0 │   1 │  700/3 │\n└──────────┴───┴─────┴───────┴───────┴─────┴─────┴────────┘","category":"page"},{"location":"bases/","page":"Bases","title":"Bases","text":"Note: On the screen, the headings for the basis (in this case, x_1, x_4, and x_5) appear in green. ","category":"page"},{"location":"bases/","page":"Bases","title":"Bases","text":"(Image: )","category":"page"},{"location":"bases/#Finding-a-Basis","page":"Bases","title":"Finding a Basis","text":"","category":"section"},{"location":"bases/","page":"Bases","title":"Bases","text":"The function find_a_basis(T) returns a feasible basis for T using the phase-one method.","category":"page"},{"location":"bases/","page":"Bases","title":"Bases","text":"julia> T\n┌──────────┬───┬────────┬─────────┬─────┬─────┬─────┬───────┐\n│          │ z │    x_1 │     x_2 │ x_3 │ x_4 │ x_5 │   RHS │\n│ Obj Func │ 1 │ 61/200 │ 109/200 │   0 │   0 │   0 │     0 │\n├──────────┼───┼────────┼─────────┼─────┼─────┼─────┼───────┤\n│   Cons 1 │ 0 │  -7/10 │   -9/10 │  -1 │   0 │   0 │ -5000 │\n│   Cons 2 │ 0 │  -1/10 │   -1/20 │   0 │  -1 │   0 │  -500 │\n│   Cons 3 │ 0 │      1 │    -1/2 │   0 │   0 │  -1 │     0 │\n└──────────┴───┴────────┴─────────┴─────┴─────┴─────┴───────┘\n\n\njulia> find_a_basis(T)\n3-element Vector{Int64}:\n 1\n 2\n 4","category":"page"},{"location":"bases/","page":"Bases","title":"Bases","text":"The function find_all_bases(T) returns a list of all feasible bases for T:","category":"page"},{"location":"bases/","page":"Bases","title":"Bases","text":"julia> find_all_bases(T)\n6-element Vector{Vector{Int64}}:\n [1, 2, 4]\n [1, 2, 5]\n [1, 3, 4]\n [1, 3, 5]\n [2, 3, 4]\n [3, 4, 5]","category":"page"},{"location":"bases/","page":"Bases","title":"Bases","text":"Note that find_all_bases is rather inefficient as it considers all possible m-element subsets of the columns.","category":"page"},{"location":"create/#Creating-Tableaux","page":"Creating Tableaux","title":"Creating Tableaux","text":"","category":"section"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"The Tableau function creates a linear programming tableau for minimization problems presented either in canonical or standard form, as explained here. ","category":"page"},{"location":"create/#Canonical-LPs","page":"Creating Tableaux","title":"Canonical LPs","text":"","category":"section"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"A canonical LP has the form min c^T x s.t. Ax  b x ge 0.  To set up a tableau for this problem simply create the matrix A  and the vectors b and c, and call Tableau(A,b,c). ","category":"page"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"For example, let A, b, and c be as follows:","category":"page"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"julia> A = [3 10; 5 6; 10 2];\n\njulia> b = [100, 100, 100];\n\njulia> c = [25, 10];\n\njulia> Tableau(A, b, c)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │ -25 │ -10 │   0 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   3 │  10 │  -1 │   0 │   0 │ 100 │\n│   Cons 2 │ 0 │   5 │   6 │   0 │  -1 │   0 │ 100 │\n│   Cons 3 │ 0 │  10 │   2 │   0 │   0 │  -1 │ 100 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"Notice that extra variables x_3, x_4, and x_5 are added to the tableau as slack variables to convert inequalities into equations. That is, canonical  form LPs are automatically converted into standard form. ","category":"page"},{"location":"create/#Standard-LPs","page":"Creating Tableaux","title":"Standard LPs","text":"","category":"section"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"A linear program in standard form is min c^T x s.t. Ax = b, x  0.  For example,","category":"page"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"julia> A = [2 1 0 9 -1; 1 1 -1 5 1]\n2×5 Matrix{Int64}:\n 2  1   0  9  -1\n 1  1  -1  5   1\n\njulia> b = [9, 7]\n2-element Vector{Int64}:\n 9\n 7\n\njulia> c = [2, 4, 2, 1, -1]\n5-element Vector{Int64}:\n  2\n  4\n  2\n  1\n -1\n\njulia> T = Tableau(A, b, c, false)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │  -2 │  -4 │  -2 │  -1 │   1 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   2 │   1 │   0 │   9 │  -1 │   9 │\n│   Cons 2 │ 0 │   1 │   1 │  -1 │   5 │   1 │   7 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"create/","page":"Creating Tableaux","title":"Creating Tableaux","text":"The fourth argument false means that the constraints are already equalities and slack variables should not be appended. ","category":"page"},{"location":"other/#Other-Features","page":"Other Functions","title":"Other Features","text":"","category":"section"},{"location":"other/#Inspection-Functions","page":"Other Functions","title":"Inspection Functions","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"basic_vector(T) returns the vector in which the nonbasic variables have been set to zero. \nget_Abc(T) returns the original matrix A and the vectors b and c that were the standard presentation of the linear program.\nget_basis(T) returns the column numbers of the current basis.\nis_feasible(T) returns true if the current basic vector is in the feasible region.\nis_optimal(T) returns true if the tableau has reached an optimal (minimal) state.\nvalue(T) returns the objective function value of the current basic vector. ","category":"page"},{"location":"other/#Return-to-start","page":"Other Functions","title":"Return to start","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"The function restore! returns the tableau to its state when it was constructed. ","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"julia> T\n┌──────────┬───┬─────┬─────┬────────┬─────┬─────────┬──────────┐\n│          │ z │ x_1 │ x_2 │    x_3 │ x_4 │     x_5 │      RHS │\n│ Obj Func │ 1 │   0 │   0 │ -25/47 │   0 │ -110/47 │ 13500/47 │\n├──────────┼───┼─────┼─────┼────────┼─────┼─────────┼──────────┤\n│   Cons 1 │ 0 │   1 │   0 │   1/47 │   0 │   -5/47 │   400/47 │\n│   Cons 2 │ 0 │   0 │   0 │ -25/47 │   1 │  -16/47 │  -600/47 │\n│   Cons 3 │ 0 │   0 │   1 │  -5/47 │   0 │    3/94 │   350/47 │\n└──────────┴───┴─────┴─────┴────────┴─────┴─────────┴──────────┘\n\n\njulia> restore!(T)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │ -25 │ -10 │   0 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   3 │  10 │  -1 │   0 │   0 │ 100 │\n│   Cons 2 │ 0 │   5 │   6 │   0 │  -1 │   0 │ 100 │\n│   Cons 3 │ 0 │  10 │   2 │   0 │   0 │  -1 │ 100 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"other/#LaTeX-output","page":"Other Functions","title":"LaTeX output","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"Using LatexPrint users can get the  code for pasting into a LaTeX document.","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"julia> using LatexPrint\n\njulia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬──────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │  x_5 │ RHS │\n│ Obj Func │ 1 │   0 │  -3 │  -2 │   8 │    0 │   9 │\n├──────────┼───┼─────┼─────┼─────┼─────┼──────┼─────┤\n│   Cons 1 │ 0 │   1 │ 1/2 │   0 │ 9/2 │ -1/2 │ 9/2 │\n│   Cons 2 │ 0 │   0 │ 1/2 │  -1 │ 1/2 │  3/2 │ 5/2 │\n└──────────┴───┴─────┴─────┴─────┴─────┴──────┴─────┘\n\n\njulia> lap(T)\n\\begin{tabular}{|c|ccccc|c|}\\hline \n{\\Large\\strut}$z$ &$x_{1}$ & $x_{2}$ & $x_{3}$ & $x_{4}$ & $x_{5}$ & RHS \\\\\n{\\Large\\strut}$1$ & $0$ & $-3$ & $-2$ & $8$ & $0$ & $9$\\\\\n\\hline \n{\\Large\\strut}$0$ & $1$ & $\\frac{1}{2}$ & $0$ & $\\frac{9}{2}$ & $\\frac{-1}{2}$ & $\\frac{9}{2}$\\\\\n{\\Large\\strut}$0$ & $0$ & $\\frac{1}{2}$ & $-1$ & $\\frac{1}{2}$ & $\\frac{3}{2}$ & $\\frac{5}{2}$\\\\\n\\hline \n\\end{tabular}","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"Here is the LaTeX output:","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"(Image: )","category":"page"},{"location":"#SimplexTableaux","page":"Overview","title":"SimplexTableaux","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This module can be used to show how to solve linear programming problems using  the simplex method by pivoting tableaux. ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This is an illusration project for solving feasible optimization problems of the form  min c^T x subject to Ax  b and x ge 0 (canonical form) and of the form min c^T x subject to Ax = b and x ge 0 (standard form).","category":"page"},{"location":"#Overview","page":"Overview","title":"Overview","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"The steps in solving linear programs with this module are as follows:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Create a Tableau from the matrix A and the vectors b and c.\nManipulate the Tableau using pivoting functions.\nAlternatively, use one of the solving methods:\nsimplex_solve!\nbig_M_solve!\nlp_solve","category":"page"},{"location":"#Caveats","page":"Overview","title":"Caveats","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This is a demonstration project that is useful for illustrating the Simplex Method and for solving small linear programs. All arithmetic is exact (using arbitrary precision rational numbers).\nThis is early days for this module. The 0.1.x versions should be consider to be beta releases.","category":"page"},{"location":"pivot/#Pivoting-Tableaux","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"","category":"section"},{"location":"pivot/#Row/Column-Pivoting","page":"Pivoting Tableaux","title":"Row/Column Pivoting","text":"","category":"section"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"The function matrix_pivot! pivots on an element of a tableau.  The syntax is matrix_pivot!(T, i, j) which will pivot the tableau on the entry corresponding to constraint i and variable x_j. ","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"For example:","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ RHS │\n│ Obj Func │ 1 │   1 │   3 │  -5 │   4 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │  -1 │   5 │  -4 │  -3 │  -3 │\n│   Cons 2 │ 0 │   3 │  -2 │   0 │   2 │   6 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┘\n\n\njulia> matrix_pivot!(T,2,4)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ RHS │\n│ Obj Func │ 1 │  -5 │   7 │  -5 │   0 │ -12 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │ 7/2 │   2 │  -4 │   0 │   6 │\n│   Cons 2 │ 0 │ 3/2 │  -1 │   0 │   1 │   3 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"The pivot was performed on the 2 in the bottom row of T.","category":"page"},{"location":"pivot/#Basis-Pivoting","page":"Pivoting Tableaux","title":"Basis Pivoting","text":"","category":"section"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"Once a basis has been specified for a tableau the function basis_pivot! can be used to specify which column should enter the basis and which column should leave.","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"julia> T\n┌──────────┬───┬──────┬────────┬───────┬─────┬─────┬──────┐\n│          │ z │  x_1 │    x_2 │   x_3 │ x_4 │ x_5 │  RHS │\n│ Obj Func │ 1 │    2 │  -68/5 │ -18/5 │   0 │   0 │ 11/5 │\n├──────────┼───┼──────┼────────┼───────┼─────┼─────┼──────┤\n│   Cons 1 │ 0 │  1/3 │ -11/15 │  -2/5 │   1 │   0 │ 2/15 │\n│   Cons 2 │ 0 │ -4/3 │ -16/15 │   3/5 │   0 │   1 │ 7/15 │\n└──────────┴───┴──────┴────────┴───────┴─────┴─────┴──────┘\n\n\njulia> get_basis(T)\n2-element Vector{Int64}:\n 4\n 5\n\njulia> basis_pivot!(T,1,4)\n┌──────────┬───┬─────┬───────┬──────┬─────┬─────┬─────┐\n│          │ z │ x_1 │   x_2 │  x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │   0 │ -46/5 │ -6/5 │  -6 │   0 │ 7/5 │\n├──────────┼───┼─────┼───────┼──────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   1 │ -11/5 │ -6/5 │   3 │   0 │ 2/5 │\n│   Cons 2 │ 0 │   0 │    -4 │   -1 │   4 │   1 │   1 │\n└──────────┴───┴─────┴───────┴──────┴─────┴─────┴─────┘\n\n\njulia> get_basis(T)\n2-element Vector{Int64}:\n 1\n 5","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"Here, we pivoted the tableau so that column 1 replaced column 4. ","category":"page"},{"location":"pivot/#Finding-Pivots","page":"Pivoting Tableaux","title":"Finding Pivots","text":"","category":"section"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"The function find_pivot returns a pair (s,t) as a recommended basis pivot for a tableau. ","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"julia> T\n┌──────────┬───┬─────┬──────┬──────┬─────┬─────┬──────┐\n│          │ z │ x_1 │  x_2 │  x_3 │ x_4 │ x_5 │  RHS │\n│ Obj Func │ 1 │  -2 │  3/2 │ -1/2 │   0 │   0 │ -1/2 │\n├──────────┼───┼─────┼──────┼──────┼─────┼─────┼──────┤\n│   Cons 1 │ 0 │  -1 │ -7/4 │ -7/4 │   1 │   0 │  1/4 │\n│   Cons 2 │ 0 │ 1/2 │  5/8 │  5/8 │   0 │   1 │  5/8 │\n└──────────┴───┴─────┴──────┴──────┴─────┴─────┴──────┘\n\n\njulia> find_pivot(T)\n(2, 5)\n\njulia> basis_pivot!(T,2,5)\n┌──────────┬───┬───────┬─────┬─────┬─────┬───────┬─────┐\n│          │ z │   x_1 │ x_2 │ x_3 │ x_4 │   x_5 │ RHS │\n│ Obj Func │ 1 │ -16/5 │   0 │  -2 │   0 │ -12/5 │  -2 │\n├──────────┼───┼───────┼─────┼─────┼─────┼───────┼─────┤\n│   Cons 1 │ 0 │   4/5 │   1 │   1 │   0 │   8/5 │   1 │\n│   Cons 2 │ 0 │   2/5 │   0 │   0 │   1 │  14/5 │   2 │\n└──────────┴───┴───────┴─────┴─────┴─────┴───────┴─────┘","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"Note that find_pivot returns (0,0) if there are no feasible pivots. ","category":"page"},{"location":"pivot/#Finding-a-pivot-for-a-specific-column","page":"Pivoting Tableaux","title":"Finding a pivot for a specific column","text":"","category":"section"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"The function find_pivot can be invoked with a third argument specifying a column in which to find a pivot. That is find_pivot(T, j) returns a pair (i,j) so that pivot!(T,i,j) is feasible. ","category":"page"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ x_6 │ x_7 │ x_8 │ RHS │\n│ Obj Func │ 1 │  29 │  -5 │  24 │  -4 │  -5 │   0 │   0 │   0 │   6 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │  -2 │  -2 │   2 │   5 │   0 │   1 │   0 │   0 │   5 │\n│   Cons 2 │ 0 │   5 │  -1 │   4 │   2 │  -2 │   0 │   1 │   0 │   6 │\n│   Cons 3 │ 0 │  -2 │   0 │  -2 │   1 │  -1 │   0 │   0 │   1 │   7 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘\n\n\njulia> find_pivot(T,1)\n(1, 7)\n\njulia> find_pivot(T,3)\n(3, 7)\n\njulia> basis_pivot!(T,3,7)\n┌──────────┬───┬──────┬──────┬─────┬─────┬──────┬─────┬──────┬─────┬─────┐\n│          │ z │  x_1 │  x_2 │ x_3 │ x_4 │  x_5 │ x_6 │  x_7 │ x_8 │ RHS │\n│ Obj Func │ 1 │   -1 │    1 │   0 │ -16 │    7 │   0 │   -6 │   0 │ -30 │\n├──────────┼───┼──────┼──────┼─────┼─────┼──────┼─────┼──────┼─────┼─────┤\n│   Cons 1 │ 0 │  5/4 │ -1/4 │   1 │ 1/2 │ -1/2 │   0 │  1/4 │   0 │ 3/2 │\n│   Cons 2 │ 0 │ -9/2 │ -3/2 │   0 │   4 │    1 │   1 │ -1/2 │   0 │   2 │\n│   Cons 3 │ 0 │  1/2 │ -1/2 │   0 │   2 │   -2 │   0 │  1/2 │   1 │  10 │\n└──────────┴───┴──────┴──────┴─────┴─────┴──────┴─────┴──────┴─────┴─────┘","category":"page"},{"location":"pivot/#Starting-Over","page":"Pivoting Tableaux","title":"Starting Over","text":"","category":"section"},{"location":"pivot/","page":"Pivoting Tableaux","title":"Pivoting Tableaux","text":"Use restore!(T) to return T to its original values before any pivoting was performed or basis was specified. ","category":"page"}]
}
