var documenterSearchIndex = {"docs":
[{"location":"create/#Creating-and-Solving-Linear-Programs","page":"Creating and Solving LPs","title":"Creating and Solving Linear Programs","text":"","category":"section"},{"location":"create/#Overview","page":"Creating and Solving LPs","title":"Overview","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"There are three principle steps to solving a linear program with this module:","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Create the tableau: Tableau(A,b,c)\nSpecify a feasible basis: set_basis!(T, B)\nRun the simplex algorithm: simplex_solve!(T)","category":"page"},{"location":"create/#Create-the-Tableau","page":"Creating and Solving LPs","title":"Create the Tableau","text":"","category":"section"},{"location":"create/#Canonical-LPs","page":"Creating and Solving LPs","title":"Canonical LPs","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"A canonical LP has the form min c^T x s.t. Ax  b x ge 0.  To set up a tableau for this problem simply create the matrix A  and the vectors b and c, and call Tableau(A,b,c). ","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"For example, let A, b, and c be as follows:","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> A = [3 10; 5 6; 10 2];\n\njulia> b = [100, 100, 100];\n\njulia> c = [25, 10];\n\njulia> Tableau(A, b, c)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │ -25 │ -10 │   0 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   3 │  10 │  -1 │   0 │   0 │ 100 │\n│   Cons 2 │ 0 │   5 │   6 │   0 │  -1 │   0 │ 100 │\n│   Cons 3 │ 0 │  10 │   2 │   0 │   0 │  -1 │ 100 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Notice that extra variables x_3, x_4, and x_5 are added to the Tableau  as slack variables to convert inequalities into equations. That is, canonical  form LPs are automatically converted into standard form. ","category":"page"},{"location":"create/#Standard-LPs","page":"Creating and Solving LPs","title":"Standard LPs","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"A linear program in standard form is min c^T x s.t. Ax = b, x  0.  For example,","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> A = [2 1 0 9 -1; 1 1 -1 5 1]\n2×5 Matrix{Int64}:\n 2  1   0  9  -1\n 1  1  -1  5   1\n\njulia> b = [9, 7]\n2-element Vector{Int64}:\n 9\n 7\n\njulia> c = [2, 4, 2, 1, -1]\n5-element Vector{Int64}:\n  2\n  4\n  2\n  1\n -1\n\njulia> T = Tableau(A, b, c, false)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │  -2 │  -4 │  -2 │  -1 │   1 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   2 │   1 │   0 │   9 │  -1 │   9 │\n│   Cons 2 │ 0 │   1 │   1 │  -1 │   5 │   1 │   7 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"The fourth argument false means that the constraints are already equalities and slack variables should not be appended. ","category":"page"},{"location":"create/#Specify-a-Basis","page":"Creating and Solving LPs","title":"Specify a Basis","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Use set_basis!(T, B) to specify a staring basis for the tableau. Here, B is a list (Vector) of integers specifying the columns that are in the basis. ","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │ -25 │ -10 │   0 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   3 │  10 │  -1 │   0 │   0 │ 100 │\n│   Cons 2 │ 0 │   5 │   6 │   0 │  -1 │   0 │ 100 │\n│   Cons 3 │ 0 │  10 │   2 │   0 │   0 │  -1 │ 100 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘\n\njulia> set_basis!(T,[1,4,5])\n┌──────────┬───┬─────┬───────┬───────┬─────┬─────┬────────┐\n│          │ z │ x_1 │   x_2 │   x_3 │ x_4 │ x_5 │    RHS │\n│ Obj Func │ 1 │   0 │ 220/3 │ -25/3 │   0 │   0 │ 2500/3 │\n├──────────┼───┼─────┼───────┼───────┼─────┼─────┼────────┤\n│   Cons 1 │ 0 │   1 │  10/3 │  -1/3 │   0 │   0 │  100/3 │\n│   Cons 2 │ 0 │   0 │  32/3 │  -5/3 │   1 │   0 │  200/3 │\n│   Cons 3 │ 0 │   0 │  94/3 │ -10/3 │   0 │   1 │  700/3 │\n└──────────┴───┴─────┴───────┴───────┴─────┴─────┴────────┘","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Note: On the screen, the headings for the basis (in this case, x_1, x_4, and x_5) appear in green. ","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"(Image: )","category":"page"},{"location":"create/#Tools-to-find-a-basis","page":"Creating and Solving LPs","title":"Tools to find a basis","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"The function find_a_basis(T) returns a feasible basis for T using the phase-one method.","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> T\n┌──────────┬───┬────────┬─────────┬─────┬─────┬─────┬───────┐\n│          │ z │    x_1 │     x_2 │ x_3 │ x_4 │ x_5 │   RHS │\n│ Obj Func │ 1 │ 61/200 │ 109/200 │   0 │   0 │   0 │     0 │\n├──────────┼───┼────────┼─────────┼─────┼─────┼─────┼───────┤\n│   Cons 1 │ 0 │  -7/10 │   -9/10 │  -1 │   0 │   0 │ -5000 │\n│   Cons 2 │ 0 │  -1/10 │   -1/20 │   0 │  -1 │   0 │  -500 │\n│   Cons 3 │ 0 │      1 │    -1/2 │   0 │   0 │  -1 │     0 │\n└──────────┴───┴────────┴─────────┴─────┴─────┴─────┴───────┘\n\n\njulia> find_a_basis(T)\n3-element Vector{Int64}:\n 1\n 2\n 4","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"The function find_all_bases(T) returns a list of all feasible bases for T:","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> find_all_bases(T)\n6-element Vector{Vector{Int64}}:\n [1, 2, 4]\n [1, 2, 5]\n [1, 3, 4]\n [1, 3, 5]\n [2, 3, 4]\n [3, 4, 5]","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Note that find_all_bases is rather inefficient as it considers all possible m-element subsets of the columns.","category":"page"},{"location":"create/#Running-the-Simplex-Algorithm","page":"Creating and Solving LPs","title":"Running the Simplex Algorithm","text":"","category":"section"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"Use simplex_solve!(T) to find the optimum value and minimizing vector for the linear program in T.  The user may either specify a starting basis, using set_basis!(T, B), or if no basis has been specificed, then one is automatically provided using find_a_basis. ","category":"page"},{"location":"create/","page":"Creating and Solving LPs","title":"Creating and Solving LPs","text":"julia> T \n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬──────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │  x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │   0 │   0 │   0 │   2 │   3 │   -1 │ -12 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼──────┼─────┼─────┤\n│   Cons 1 │ 0 │   1 │   0 │   0 │  -2 │  -9 │    1 │   9 │   0 │\n│   Cons 2 │ 0 │   0 │   1 │   0 │ 1/3 │   1 │ -1/3 │  -2 │   0 │\n│   Cons 3 │ 0 │   0 │   0 │   1 │   2 │   3 │   -1 │ -12 │   2 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴──────┴─────┴─────┘\n\njulia> simplex_solve!(T)\nStarting basis found: [1, 3, 5]\nStarting tableau\n\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬──────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │  x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │   0 │  -3 │   0 │   1 │   0 │    0 │  -6 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼──────┼─────┼─────┤\n│   Cons 1 │ 0 │   1 │   9 │   0 │   1 │   0 │   -2 │  -9 │   0 │\n│   Cons 2 │ 0 │   0 │  -3 │   1 │   1 │   0 │    0 │  -6 │   2 │\n│   Cons 3 │ 0 │   0 │   1 │   0 │ 1/3 │   1 │ -1/3 │  -2 │   0 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴──────┴─────┴─────┘\n\nPivot 1: column 1 leaves basis and column 4 enters\n\n┌──────────┬───┬──────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │  x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │   -1 │ -12 │   0 │   0 │   0 │   2 │   3 │   0 │\n├──────────┼───┼──────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   -1 │ -12 │   1 │   0 │   0 │   2 │   3 │   2 │\n│   Cons 2 │ 0 │    1 │   9 │   0 │   1 │   0 │  -2 │  -9 │   0 │\n│   Cons 3 │ 0 │ -1/3 │  -2 │   0 │   0 │   1 │ 1/3 │   1 │   0 │\n└──────────┴───┴──────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘\n\nPivot 2: column 5 leaves basis and column 7 enters\n\n┌──────────┬───┬──────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │  x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │    0 │  -6 │   0 │   0 │  -3 │   1 │   0 │   0 │\n├──────────┼───┼──────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │    0 │  -6 │   1 │   0 │  -3 │   1 │   0 │   2 │\n│   Cons 2 │ 0 │   -2 │  -9 │   0 │   1 │   9 │   1 │   0 │   0 │\n│   Cons 3 │ 0 │ -1/3 │  -2 │   0 │   0 │   1 │ 1/3 │   1 │   0 │\n└──────────┴───┴──────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘\n\nPivot 3: column 4 leaves basis and column 6 enters\n\n┌──────────┬───┬─────┬─────┬─────┬──────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │  x_4 │ x_5 │ x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │   2 │   3 │   0 │   -1 │ -12 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼──────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   2 │   3 │   1 │   -1 │ -12 │   0 │   0 │   2 │\n│   Cons 2 │ 0 │  -2 │  -9 │   0 │    1 │   9 │   1 │   0 │   0 │\n│   Cons 3 │ 0 │ 1/3 │   1 │   0 │ -1/3 │  -2 │   0 │   1 │   0 │\n└──────────┴───┴─────┴─────┴─────┴──────┴─────┴─────┴─────┴─────┘\n\nPivot 4: column 7 leaves basis and column 2 enters\n\n┌──────────┬───┬─────┬─────┬─────┬──────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │  x_4 │ x_5 │ x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │   1 │   0 │   0 │    0 │  -6 │   0 │  -3 │   0 │\n├──────────┼───┼─────┼─────┼─────┼──────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │ 1/3 │   1 │   0 │ -1/3 │  -2 │   0 │   1 │   0 │\n│   Cons 2 │ 0 │   1 │   0 │   1 │    0 │  -6 │   0 │  -3 │   2 │\n│   Cons 3 │ 0 │   1 │   0 │   0 │   -2 │  -9 │   1 │   9 │   0 │\n└──────────┴───┴─────┴─────┴─────┴──────┴─────┴─────┴─────┴─────┘\n\nPivot 5: column 2 leaves basis and column 1 enters\n\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │   0 │  -3 │   0 │   1 │   0 │   0 │  -6 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   1 │   3 │   0 │  -1 │  -6 │   0 │   3 │   0 │\n│   Cons 2 │ 0 │   0 │  -3 │   1 │   1 │   0 │   0 │  -6 │   2 │\n│   Cons 3 │ 0 │   0 │  -3 │   0 │  -1 │  -3 │   1 │   6 │   0 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘\n\nPivot 6: column 3 leaves basis and column 4 enters\n\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ x_6 │ x_7 │ RHS │\n│ Obj Func │ 1 │   0 │   0 │  -1 │   0 │   0 │   0 │   0 │  -2 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   1 │   0 │   1 │   0 │  -6 │   0 │  -3 │   2 │\n│   Cons 2 │ 0 │   0 │  -3 │   1 │   1 │   0 │   0 │  -6 │   2 │\n│   Cons 3 │ 0 │   0 │  -6 │   1 │   0 │  -3 │   1 │   0 │   2 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘\n\nOptimality reached. Pivot count = 6\nMinimal value = -2 = -2.0\n7-element Vector{Rational}:\n 2\n 0\n 0\n 2\n 0\n 2\n 0","category":"page"},{"location":"other/#Other-Features","page":"Other Functions","title":"Other Features","text":"","category":"section"},{"location":"other/#Inspection-Functions","page":"Other Functions","title":"Inspection Functions","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"basic_vector(T) returns the vector in which the nonbasic variable have been set to zero. \nget_Abc(T) returns the original matrix A and the vectors b and c that were the standard presentation of the linear program.\nget_basis(T) returns the column number of the current basis.\nis_feasible(T) returns true if the current basic vector is in the feasible region.\nis_optimal(T) returns true if the tableau has reached an optimal (minimal) state.\nvalue(T) returns the objective function value of the current basic vector. ","category":"page"},{"location":"other/#Tableau-Manipulation","page":"Other Functions","title":"Tableau Manipulation","text":"","category":"section"},{"location":"other/#Basis-pivoting","page":"Other Functions","title":"Basis pivoting","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"After a basis has been established, the function basis_pivot! can be used to modify  the basis by specifying the column that enters the basis and the column that leaves.","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"julia> T\n┌──────────┬───┬─────┬───────┬───────┬─────┬─────┬────────┐\n│          │ z │ x_1 │   x_2 │   x_3 │ x_4 │ x_5 │    RHS │\n│ Obj Func │ 1 │   0 │ 220/3 │ -25/3 │   0 │   0 │ 2500/3 │\n├──────────┼───┼─────┼───────┼───────┼─────┼─────┼────────┤\n│   Cons 1 │ 0 │   1 │  10/3 │  -1/3 │   0 │   0 │  100/3 │\n│   Cons 2 │ 0 │   0 │  32/3 │  -5/3 │   1 │   0 │  200/3 │\n│   Cons 3 │ 0 │   0 │  94/3 │ -10/3 │   0 │   1 │  700/3 │\n└──────────┴───┴─────┴───────┴───────┴─────┴─────┴────────┘\n\n\njulia> basis_pivot!(T,2,1)\n┌──────────┬───┬───────┬─────┬───────┬─────┬─────┬─────┐\n│          │ z │   x_1 │ x_2 │   x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │   -22 │   0 │    -1 │   0 │   0 │ 100 │\n├──────────┼───┼───────┼─────┼───────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │  3/10 │   1 │ -1/10 │   0 │   0 │  10 │\n│   Cons 2 │ 0 │ -16/5 │   0 │  -3/5 │   1 │   0 │ -40 │\n│   Cons 3 │ 0 │ -47/5 │   0 │  -1/5 │   0 │   1 │ -80 │\n└──────────┴───┴───────┴─────┴───────┴─────┴─────┴─────┘","category":"page"},{"location":"other/#Matrix-pivoting","page":"Other Functions","title":"Matrix pivoting","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"A tableau may be manipulated by specifying a nonzero entry on which to pivot.  The function pivot!(T,r,c) pivots on the entry for constraint r and the column c  (where c=1 corresponds to the variable x_1).","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"julia> T\n┌──────────┬───┬─────┬───────┬───────┬─────┬─────┬────────┐\n│          │ z │ x_1 │   x_2 │   x_3 │ x_4 │ x_5 │    RHS │\n│ Obj Func │ 1 │   0 │ 220/3 │ -25/3 │   0 │   0 │ 2500/3 │\n├──────────┼───┼─────┼───────┼───────┼─────┼─────┼────────┤\n│   Cons 1 │ 0 │   1 │  10/3 │  -1/3 │   0 │   0 │  100/3 │\n│   Cons 2 │ 0 │   0 │  32/3 │  -5/3 │   1 │   0 │  200/3 │\n│   Cons 3 │ 0 │   0 │  94/3 │ -10/3 │   0 │   1 │  700/3 │\n└──────────┴───┴─────┴───────┴───────┴─────┴─────┴────────┘\n\n\njulia> matrix_pivot!(T,3,2)\n┌──────────┬───┬─────┬─────┬────────┬─────┬─────────┬──────────┐\n│          │ z │ x_1 │ x_2 │    x_3 │ x_4 │     x_5 │      RHS │\n│ Obj Func │ 1 │   0 │   0 │ -25/47 │   0 │ -110/47 │ 13500/47 │\n├──────────┼───┼─────┼─────┼────────┼─────┼─────────┼──────────┤\n│   Cons 1 │ 0 │   1 │   0 │   1/47 │   0 │   -5/47 │   400/47 │\n│   Cons 2 │ 0 │   0 │   0 │ -25/47 │   1 │  -16/47 │  -600/47 │\n│   Cons 3 │ 0 │   0 │   1 │  -5/47 │   0 │    3/94 │   350/47 │\n└──────────┴───┴─────┴─────┴────────┴─────┴─────────┴──────────┘","category":"page"},{"location":"other/#Return-to-start","page":"Other Functions","title":"Return to start","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"The function restore! returns the tableau to its state when it was constructed. ","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"julia> T\n┌──────────┬───┬─────┬─────┬────────┬─────┬─────────┬──────────┐\n│          │ z │ x_1 │ x_2 │    x_3 │ x_4 │     x_5 │      RHS │\n│ Obj Func │ 1 │   0 │   0 │ -25/47 │   0 │ -110/47 │ 13500/47 │\n├──────────┼───┼─────┼─────┼────────┼─────┼─────────┼──────────┤\n│   Cons 1 │ 0 │   1 │   0 │   1/47 │   0 │   -5/47 │   400/47 │\n│   Cons 2 │ 0 │   0 │   0 │ -25/47 │   1 │  -16/47 │  -600/47 │\n│   Cons 3 │ 0 │   0 │   1 │  -5/47 │   0 │    3/94 │   350/47 │\n└──────────┴───┴─────┴─────┴────────┴─────┴─────────┴──────────┘\n\n\njulia> restore!(T)\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │ -25 │ -10 │   0 │   0 │   0 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   3 │  10 │  -1 │   0 │   0 │ 100 │\n│   Cons 2 │ 0 │   5 │   6 │   0 │  -1 │   0 │ 100 │\n│   Cons 3 │ 0 │  10 │   2 │   0 │   0 │  -1 │ 100 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘","category":"page"},{"location":"other/#Using-a-Numerical-Solver","page":"Other Functions","title":"Using a Numerical Solver","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"The function lp_solve finds a numerical solution to the linear program  using a Julia solver (default: HiGHS).","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"julia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬─────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │ x_5 │ RHS │\n│ Obj Func │ 1 │  -2 │  -4 │  -2 │  -1 │   1 │   0 │\n├──────────┼───┼─────┼─────┼─────┼─────┼─────┼─────┤\n│   Cons 1 │ 0 │   2 │   1 │   0 │   9 │  -1 │   9 │\n│   Cons 2 │ 0 │   1 │   1 │  -1 │   5 │   1 │   7 │\n└──────────┴───┴─────┴─────┴─────┴─────┴─────┴─────┘\n\njulia> lp_solve(T)\nOptimum value = -0.14285714285714324\n\n5-element Vector{Float64}:\n 0.0\n 0.0\n 0.0\n 1.1428571428571428\n 1.285714285714286","category":"page"},{"location":"other/#LaTeX-output","page":"Other Functions","title":"LaTeX output","text":"","category":"section"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"Using LatexPrint users can get the  code for pasting into a LaTeX document.","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"julia> using LatexPrint\n\njulia> T\n┌──────────┬───┬─────┬─────┬─────┬─────┬──────┬─────┐\n│          │ z │ x_1 │ x_2 │ x_3 │ x_4 │  x_5 │ RHS │\n│ Obj Func │ 1 │   0 │  -3 │  -2 │   8 │    0 │   9 │\n├──────────┼───┼─────┼─────┼─────┼─────┼──────┼─────┤\n│   Cons 1 │ 0 │   1 │ 1/2 │   0 │ 9/2 │ -1/2 │ 9/2 │\n│   Cons 2 │ 0 │   0 │ 1/2 │  -1 │ 1/2 │  3/2 │ 5/2 │\n└──────────┴───┴─────┴─────┴─────┴─────┴──────┴─────┘\n\n\njulia> lap(T)\n\\begin{tabular}{|c|ccccc|c|}\\hline \n{\\Large\\strut}$z$ &$x_{1}$ & $x_{2}$ & $x_{3}$ & $x_{4}$ & $x_{5}$ & RHS \\\\\n{\\Large\\strut}$1$ & $0$ & $-3$ & $-2$ & $8$ & $0$ & $9$\\\\\n\\hline \n{\\Large\\strut}$0$ & $1$ & $\\frac{1}{2}$ & $0$ & $\\frac{9}{2}$ & $\\frac{-1}{2}$ & $\\frac{9}{2}$\\\\\n{\\Large\\strut}$0$ & $0$ & $\\frac{1}{2}$ & $-1$ & $\\frac{1}{2}$ & $\\frac{3}{2}$ & $\\frac{5}{2}$\\\\\n\\hline \n\\end{tabular}","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"Here is the LaTeX output:","category":"page"},{"location":"other/","page":"Other Functions","title":"Other Functions","text":"(Image: )","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Note: This is early days for this module. Anything before 0.1.0 is subject to massive changes. ","category":"page"},{"location":"#SimplexTableaux","page":"Overview","title":"SimplexTableaux","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"This module can be used to show how to solve linear programming problems using  the simplex method by pivoting tableaux. ","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This is an illusration project for solving feasible optimization problems of the form  min c^T x subject to Ax  b and x ge 0 (canonical form) and of the form min c^T x subject to Ax = b and x ge 0 (standard form).","category":"page"}]
}
